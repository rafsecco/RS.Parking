EntityFrameWorkCore
	Migrations
	Ir para a pasta C:\@BackUp\@Program\Projects\RS.Parking\Back\src\
		dotnet ef migrations add Initial -v -p .\RS.Parking.Infrastructure\ -s .\RS.Parking.API\
		dotnet ef database update -s .\RS.Parking.API\ [--connection your_connection_string]
		dotnet ef migrations script -v -i -p .\RS.Parking.Infrastructure -s .\RS.Parking.API\ -o ..\..\Docker\DataBase\FirstMigration.sql

		dotnet ef migrations list -p .\RS.Parking.Infrastructure\ -s .\RS.Parking.API\

Iniciar BackEnd
	Abrir o terminar e ir para a pasta "C:\@BackUp\@Program\Projects\RS.Parking\Back\src\RS.Parking.API\"
	Executar o comando "dotnet run"

Iniciar FrontEnd
	Abrir o terminar e ir para a pasta "C:\@BackUp\@Program\Projects\RS.Parking\Front\RS.Parking-AppAngular\"
	Executar o comando "ng serve -o"


ng g c [NomeComponente] --module app
ng g c components/vehicletypes/vehicletypes-new --module app

########## DOCKER ##########
docker system prune -af --volumes

Ir para a pasta C:\@BackUp\@Program\Projects\RS.Parking\Docker
docker compose -p rs_parking build --force-rm
docker compose -p rs_parking up -d
docker compose -p rs_parking down -v --rmi all

### Apenas o Database
cd Docker\Database

docker build -t mariadb .
docker run --name mariadb -dp 3306:3306 mariadb


# docker pull mariadb
# docker run --name some-mariadb -p 3306:3306 --env MARIADB_ROOT_PASSWORD=MyDB@123 -d mariadb:latest

### API
cd .\Back\src\RS.Parking.API\
docker build -t api .
