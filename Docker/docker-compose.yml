services:
  db-parking:
    container_name: RS_Parking_DB
    hostname: rsparking-db
    restart: always
    build:
      context: ./DataBase
      dockerfile: Dockerfile
    image: rs-parking-db-image:initial
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: MyDB@123
    # volumes:
    #   - "./DataBase/scripts/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    #   - "./DataBase/scripts/data.sql:/docker-entrypoint-initdb.d/2.sql"

  # adminer:
  #   image: adminer
  #   ports:
  #     - 8080:8080

  api-parking:
    container_name: RS_Parking_API
    hostname: rsparking-api
    restart: always
    build:
      context: ../src/Back
      # dockerfile: ./Dockerfile
    image: rs-parking-api-image:latest
    ports:
      - 5000:5000
      # - 5001:5001
    environment:
      # - ASPNETCORE_ENVIRONMENT=Production
      # - ASPNETCORE_URLS=http://+5000
      # - ASPNETCORE_HTTPS_PORT=5001
      # - ASPNETCORE_URLS=https://+:5001;http://+5000
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+5000
    depends_on:
      - db-parking

  web-parking-angular:
    container_name: RS_Parking_Nginx_Angular
    hostname: rsparking-angular-nginx
    restart: always
    build:
      context: ../src/front/RS.Parking-AppAngular/
      # dockerfile: ./Dockerfile
    image: rs-parking-angular-image:latest
    ports:
      - "8080:80"
    depends_on:
      - db-parking
      - api-parking

  # generate-pfx:
  #   image: emberstack/openssl
  #   container_name: generate-pfx
  #   volumes:
  #     - ./certs:/https:rw
  #   command: >
  #     sh -c "[ -e "./https/devstore.academy-localhost.pfx" ] && echo File Already exist || (
  #       rm -f /https/devstore.academy-localhost.pfx &&
  #       openssl genrsa -out devstore.rsa 2048 &&
  #       openssl req -sha256 -new -key devstore.rsa -out devstore.csr -subj '/CN=localhost' &&
  #       openssl x509 -req -sha256 -days 365 -in devstore.csr -signkey devstore.rsa -out devstore.crt &&
  #       openssl pkcs12 -export -out /https/devstore.academy-localhost.pfx -inkey devstore.rsa -in devstore.crt -password pass:9HoGMnb7Lu8NFdHBz4Vq2rtKivzMhmMXhtvuB4TZcLMmbWfFmDQCjJeLURAJ4GYe &&
  #       rm devstore.rsa devstore.csr devstore.crt)"

# docker compose -p rs-parking build --force-rm
# docker compose -p rs-parking up -d
# docker compose -p rs-parking down -v --rmi all
