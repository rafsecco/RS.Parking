// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS.Parking.Infrastructure;

#nullable disable

namespace RS.Parking.Infrastructure.Migrations
{
    [DbContext(typeof(RSParkingContext))]
    [Migration("20240406201734_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("RS.Parking")
                .UseCollation("utf8_general_ci")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RS.Parking.Domain.Models.AccordType", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT UNSIGNED")
                        .HasColumnName("id_accord");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bln_active");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dt_dateCreated")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_accord");

                    b.Property<ushort>("DiscountTypeId")
                        .HasColumnType("smallint unsigned")
                        .HasColumnName("ie_accord");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("nr_percentage");

                    b.HasKey("Id");

                    b.ToTable("tb_AccordType", "RS.Parking");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Active = true,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(3151),
                            Description = "No Discount",
                            DiscountTypeId = (ushort)0,
                            Percentage = 0m
                        },
                        new
                        {
                            Id = (byte)2,
                            Active = true,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(3154),
                            Description = "Subway",
                            DiscountTypeId = (ushort)1,
                            Percentage = 50.0m
                        },
                        new
                        {
                            Id = (byte)3,
                            Active = true,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(3157),
                            Description = "McDonald's",
                            DiscountTypeId = (ushort)2,
                            Percentage = 100m
                        },
                        new
                        {
                            Id = (byte)4,
                            Active = true,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(3161),
                            Description = "PharmaTech",
                            DiscountTypeId = (ushort)2,
                            Percentage = 50m
                        });
                });

            modelBuilder.Entity("RS.Parking.Domain.Models.ControlInOut", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT UNSIGNED")
                        .HasColumnName("id_controlInOut");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<ulong>("Id"));

                    b.Property<byte>("AccordTypeId")
                        .HasColumnType("TINYINT UNSIGNED")
                        .HasColumnName("cd_accord");

                    b.Property<DateTime>("DateTimeIn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dt_in")
                        .HasDefaultValueSql("NOW()");

                    b.Property<DateTime?>("DateTimeOut")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dt_out");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)")
                        .HasColumnName("ds_licensePlate");

                    b.Property<byte>("VehicleTypeId")
                        .HasColumnType("TINYINT UNSIGNED")
                        .HasColumnName("cd_vehicle");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "DateTimeOut" }, "idx_tb_ControleInOut_dt_out");

                    b.ToTable("tb_ControlInOut", "RS.Parking");

                    b.HasData(
                        new
                        {
                            Id = 1ul,
                            AccordTypeId = (byte)1,
                            DateTimeIn = new DateTime(2024, 4, 5, 8, 0, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 5, 10, 0, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-123",
                            VehicleTypeId = (byte)1
                        },
                        new
                        {
                            Id = 2ul,
                            AccordTypeId = (byte)2,
                            DateTimeIn = new DateTime(2024, 4, 5, 10, 0, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 5, 12, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-456",
                            VehicleTypeId = (byte)1
                        },
                        new
                        {
                            Id = 3ul,
                            AccordTypeId = (byte)3,
                            DateTimeIn = new DateTime(2024, 4, 5, 12, 30, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 5, 14, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-789",
                            VehicleTypeId = (byte)1
                        },
                        new
                        {
                            Id = 4ul,
                            AccordTypeId = (byte)4,
                            DateTimeIn = new DateTime(2024, 4, 5, 16, 30, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 5, 18, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-147",
                            VehicleTypeId = (byte)1
                        },
                        new
                        {
                            Id = 5ul,
                            AccordTypeId = (byte)1,
                            DateTimeIn = new DateTime(2024, 4, 4, 8, 0, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 4, 10, 0, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-123",
                            VehicleTypeId = (byte)2
                        },
                        new
                        {
                            Id = 6ul,
                            AccordTypeId = (byte)2,
                            DateTimeIn = new DateTime(2024, 4, 4, 10, 0, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 4, 12, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-456",
                            VehicleTypeId = (byte)2
                        },
                        new
                        {
                            Id = 7ul,
                            AccordTypeId = (byte)3,
                            DateTimeIn = new DateTime(2024, 4, 4, 12, 30, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 4, 14, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-789",
                            VehicleTypeId = (byte)2
                        },
                        new
                        {
                            Id = 8ul,
                            AccordTypeId = (byte)4,
                            DateTimeIn = new DateTime(2024, 4, 4, 16, 30, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 4, 18, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-147",
                            VehicleTypeId = (byte)2
                        },
                        new
                        {
                            Id = 9ul,
                            AccordTypeId = (byte)1,
                            DateTimeIn = new DateTime(2024, 4, 3, 8, 0, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 3, 10, 0, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-123",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 10ul,
                            AccordTypeId = (byte)2,
                            DateTimeIn = new DateTime(2024, 4, 3, 10, 0, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 3, 12, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-456",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 11ul,
                            AccordTypeId = (byte)3,
                            DateTimeIn = new DateTime(2024, 4, 3, 12, 30, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 3, 14, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-789",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 12ul,
                            AccordTypeId = (byte)4,
                            DateTimeIn = new DateTime(2024, 4, 3, 16, 30, 0, 0, DateTimeKind.Local),
                            DateTimeOut = new DateTime(2024, 4, 3, 18, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-147",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 13ul,
                            AccordTypeId = (byte)1,
                            DateTimeIn = new DateTime(2024, 4, 6, 8, 0, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-123",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 14ul,
                            AccordTypeId = (byte)2,
                            DateTimeIn = new DateTime(2024, 4, 6, 10, 0, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-456",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 15ul,
                            AccordTypeId = (byte)3,
                            DateTimeIn = new DateTime(2024, 4, 6, 12, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-789",
                            VehicleTypeId = (byte)3
                        },
                        new
                        {
                            Id = 16ul,
                            AccordTypeId = (byte)4,
                            DateTimeIn = new DateTime(2024, 4, 6, 16, 30, 0, 0, DateTimeKind.Local),
                            LicensePlate = "BRL-147",
                            VehicleTypeId = (byte)3
                        });
                });

            modelBuilder.Entity("RS.Parking.Domain.Models.VehicleType", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TINYINT UNSIGNED")
                        .HasColumnName("id_vehicle");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<byte>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("bln_active");

                    b.Property<decimal>("Cost")
                        .IsConcurrencyToken()
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("vl_cost");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("dt_dateCreated")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ds_vehicle");

                    b.HasKey("Id");

                    b.ToTable("tb_VehicleType", "RS.Parking");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Active = true,
                            Cost = 4m,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(9898),
                            Description = "Car 1 (small)"
                        },
                        new
                        {
                            Id = (byte)2,
                            Active = true,
                            Cost = 5.5m,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(9901),
                            Description = "Car 2 (big)"
                        },
                        new
                        {
                            Id = (byte)3,
                            Active = true,
                            Cost = 3m,
                            DateCreated = new DateTime(2024, 4, 6, 17, 17, 33, 953, DateTimeKind.Local).AddTicks(9903),
                            Description = "Moto 1"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
