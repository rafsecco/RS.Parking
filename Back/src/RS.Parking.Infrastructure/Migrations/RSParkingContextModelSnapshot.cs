// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RS.Parking.Infrastructure.Contexts;

#nullable disable

namespace RS.Parking.Infrastructure.Migrations
{
    [DbContext(typeof(RSParkingContext))]
    partial class RSParkingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("RS.Parking.Domain.Models.AccordType", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Accord")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<double>("Percentage")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("AccordTypes");
                });

            modelBuilder.Entity("RS.Parking.Domain.Models.ControlInOut", b =>
                {
                    b.Property<ulong>("VehicleTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("AccordTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateTimeOut")
                        .HasColumnType("TEXT");

                    b.Property<ulong>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("TEXT");

                    b.HasKey("VehicleTypeId", "AccordTypeId");

                    b.HasIndex("AccordTypeId");

                    b.ToTable("ControlInOut");
                });

            modelBuilder.Entity("RS.Parking.Domain.Models.VehicleType", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("RS.Parking.Domain.Models.ControlInOut", b =>
                {
                    b.HasOne("RS.Parking.Domain.Models.AccordType", "AccordType")
                        .WithMany()
                        .HasForeignKey("AccordTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RS.Parking.Domain.Models.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccordType");

                    b.Navigation("VehicleType");
                });
#pragma warning restore 612, 618
        }
    }
}
